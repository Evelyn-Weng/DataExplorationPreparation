db$Reported.Date <- as.Date(db$Reported.Date, format = "%m/%d/%Y")
View(db)
data_2018 <- db[format(db$Occurred.Date, "%Y") == "2018", ]
crime2018 <- data_2018
sum(is.na(crime2018$Sector))
sector_frequency <- table(crime2018$Sector)
mode_sector <- names(sector_frequency)[sector_frequency == max(sector_frequency)]
crime2018$Sector <- ifelse(is.na(crime2018$Sector), mode_sector, crime2018$Sector)
sum(is.na(crime2018$Sector))
sum(is.na(crime2018))
Newcrime2018 <- crime2018[, -which(names(crime2018) == 'Beat')]
View(Newcrime2018)
Newcrime2018 <- Newcrime2018[1:(nrow(Newcrime2018) -2),]
sum(is.na(Newcrime2018))
write.csv(Newcrime2018,'Newcrime2018.csv',row.names = FALSE)
is.na(Newcrime2018$Sector)
sum(is.na(Newcrime2018$Sector))
unique(Newcrime2018$Sector)
str(Newcrime2018$Sector)
unique(Newcrime2018$Sector)
class(Newcrime2018$Sector)
summary(Newcrime2018$Sector)
table(is.na(Newcrime2018$Sector))
unique(Newcrime2018$Report.Number)
unique(Newcrime2018$Occurred.Date)
unique(Newcrime2018$Occurred.Time)
unique(Newcrime2018$Reported.Date)
unique(Newcrime2018$Crime.Subcategory)
unique(Newcrime2018$Primary.Offense.Description)
unique(Newcrime2018$Precinct)
unique(Newcrime2018$Neighborhood)
View(Newcrime2018)
db <- read.csv('Crime_Data.csv')
dim(db)
names(db)
any(is.na(db))
db$Occurred.Date <- as.Date(db$Occurred.Date, format = "%m/%d/%Y")
db$Reported.Date <- as.Date(db$Reported.Date, format = "%m/%d/%Y")
View(db)
data_2018 <- db[format(db$Occurred.Date, "%Y") == "2018", ]
crime2018 <- data_2018
sum(is.na(crime2018$Sector))
unique(crime2018$Report.Number)
unique(crime2018$Occurred.Date)
unique(crime2018$Occurred.Time)
unique(crime2018$Reported.Date)
unique(crime2018$Crime.Subcategory)
unique(crime2018$Primary.Offense.Description)
unique(crime2018$Precinct)
unique(crime2018$Sector)
unique(crime2018$Neighborhood)
Precinct_frequency <- table(crime2018$Precinct)
sector_frequency <- table(crime2018$Sector)
mode_Precinct <- names(Precinct_frequency)[Precinct_frequency == max(Precinct_frequency)]
mode_sector <- names(sector_frequency)[sector_frequency == max(sector_frequency)]
crime2018$Precinct <- ifelse(is.na(crime2018$Precinct), mode_sector, crime2018$Precinct)
crime2018$Sector <- ifelse(is.na(crime2018$Sector), mode_sector, crime2018$Sector)
db <- read.csv('Crime_Data.csv')
db$Occurred.Date <- as.Date(db$Occurred.Date, format = "%m/%d/%Y")
db$Reported.Date <- as.Date(db$Reported.Date, format = "%m/%d/%Y")
data_2018 <- db[format(db$Occurred.Date, "%Y") == "2018", ]
crime2018 <- data_2018
sum(is.na(crime2018$Sector))
Precinct_frequency <- table(crime2018$Precinct)
sector_frequency <- table(crime2018$Sector)
mode_Precinct <- names(Precinct_frequency)[Precinct_frequency == max(Precinct_frequency)]
mode_sector <- names(sector_frequency)[sector_frequency == max(sector_frequency)]
crime2018$Precinct <- ifelse(is.na(crime2018$Precinct), mode_Precinct, crime2018$Precinct)
crime2018$Precinct[crime2018$Precinct == ""] <- mode_sector
crime2018$Sector <- ifelse(is.na(crime2018$Sector), mode_sector, crime2018$Sector)
crime2018$Sector[crime2018$Sector == ""] <- mode_sector
sum(is.na(crime2018$Sector))
unique(crime2018$Precinct)
unique(crime2018$Sector)
write.csv(crime2018,'crime2018.csv', row.names = FALSE)
db <- read.csv('Crime_Data.csv')
db$Occurred.Date <- as.Date(db$Occurred.Date, format = "%m/%d/%Y")
db$Reported.Date <- as.Date(db$Reported.Date, format = "%m/%d/%Y")
data_2018 <- db[format(db$Occurred.Date, "%Y") == "2018", ]
crime2018 <- data_2018
sum(is.na(crime2018$Sector))
Precinct_frequency <- table(crime2018$Precinct)
sector_frequency <- table(crime2018$Sector)
mode_Precinct <- names(Precinct_frequency)[Precinct_frequency == max(Precinct_frequency)]
mode_sector <- names(sector_frequency)[sector_frequency == max(sector_frequency)]
crime2018$Precinct <- ifelse(is.na(crime2018$Precinct), mode_Precinct, crime2018$Precinct)
crime2018$Precinct[crime2018$Precinct == ""] <- mode_Precinct
crime2018$Precinct[crime2018$Precinct == "M"] <- mode_Precinct
crime2018$Sector <- ifelse(is.na(crime2018$Sector), mode_sector, crime2018$Sector)
crime2018$Sector[crime2018$Sector == ""] <- mode_sector
crime2018$Sector[crime2018$Sector == "9512"] <- mode_sector
unique(crime2018$Precinct)
unique(crime2018$Sector)
write.csv(crime2018,'crime2018.csv', row.names = FALSE)
write.csv(crime2018,'crime2018.csv', row.names = FALSE)
Newcrime2018 <- crime2018[, -which(names(crime2018) == 'Beat')]
Newcrime2018 <- Newcrime2018[1:(nrow(Newcrime2018) -2),]
sum(is.na(Newcrime2018))
write.csv(Newcrime2018,'Newcrime2018.csv',row.names = FALSE)
library(ggplot2)
precinct_summary <- table(Newcrime2018$Precinct)
precinct_summary_df <- as.data.frame(precinct_summary)
names(precinct_summary_df) <- c('Precinct', 'Count')
ggplot(precinct_summary_df, aes(x= '' , y= Count, fill = Precinct)) +
geom_bar(stat = 'identity', width = 1) +
coord_polar('y') +
labs(title = 'Distribution of Incidents Across Precincts',
fill = 'Precinct') +
theme_minimal() +
theme(legend.position = 'right')
names(Newcrime2018)
summary(Newcrime2018)
library(psych)
summary_Newcrime2018 <- describe(Newcrime2018)
print(summary_Newcrime2018)
summary_Newcrime2018 <- describe(Newcrime2018)
print(summary_Newcrime2018)
mmnorm.ReportedNumber <- (Newcrime2018$Report.Number-min(Newcrime2018$Report.Number)) /(max(Newcrime2018$Report.Number)-min(Newcrime2018$Report.Number))
mmnorm.ReportedNumber## the value always between 0-1, and it is.
zscore.OccurredTime <- (Newcrime2018$Occurred.Time-mean(Newcrime2018$Occurred.Time))/sd(Newcrime2018$Occurred.Time)
zscore.OccurredTime
summary(Newcrime2018$Reported.Time)
RobustScalarReportedTime <- (Newcrime2018$Reported.Time - mean(Newcrime2018$Reported.Time))/(1808 -  943)
RobustScalarReportedTime
ggplot(Newcrime2018, aes(x = Precinct, y = Reported.Date, group = Precinct, color = Precinct)) +
geom_line() +
labs(title = "Relationship Between Reported Date and Precinct",
x = "Reported Date",
y = "Precinct")# +
#theme_minimal()
## 2.Scatter
ggplot(Newcrime2018, aes(x = Crime.Subcategory, y = Occurred.Time)) +
geom_point() +
labs(title = 'Scatter Plot of Crime Subcategory and Occurred Time',
x = 'Crime.Subcategory',
y = 'Occurred.Time') +
## theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0.5,size = 8, vjust = 1))
ggsave('scatter_plot.png', width = 18, height = 6)
## 2.Scatter
ggplot(Newcrime2018, aes(x = Crime.Subcategory, y = Occurred.Time)) +
geom_point() +
labs(title = 'Scatter Plot of Crime Subcategory and Occurred Time',
x = 'Crime.Subcategory',
y = 'Occurred.Time') +
## theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0.5,size = 8, vjust = 1))
ggsave('scatter_plot.png', width = 18, height = 6)
ggplot(Newcrime2018, aes(x = Precinct, y = Reported.Date, group = Precinct, color = Precinct)) +
geom_line(stat = 'count') +
labs(title = "Relationship Between Reported Date and Precinct",
x = "Reported Date",
y = "Precinct")# +
ggplot(Newcrime2018, aes(x = Precinct, y = Reported.Date, group = Precinct, color = Precinct)) +
geom_line(stat = 'count') +
labs(title = "Relationship Between Reported Date and Precinct",
x = "Reported Date",
y = "Precinct") +
theme_minimal()
ggplot(Newcrime2018, aes(x = Precinct, group = Reported.Date, color = Reported.Date)) +
geom_line(stat = "count") +
labs(title = "Incidents Count Over Time for Each Precinct",
x = "Precinct",
y = "Incidents Count") +
theme_minimal()
ggplot(Newcrime2018, aes(x = Precinct, group = Reported.Date, color = Reported.Date)) +
geom_line(stat = "count") +
labs(title = "Reported.Date Incidents Count Over Time for Each Precinct",
x = "Precinct",
y = "Incidents Count") +
theme_minimal()
Newcrime2018$Occurred.Time <- factor(Newcrime2018$Occurred.Time, levels = unique(Newcrime2018$Occurred.Time))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = ..count..)) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
library(dplyr)
library(scales)
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = ..count..)) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Newcrime2018$Occurred.Time <- factor(Newcrime2018$Occurred.Time, levels = unique(Newcrime2018$Occurred.Time))
# Create a heatmap with 'Neighborhood' on the x-axis, 'Occurred.Time' on the y-axis, and color representing the count of incidents
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = ..count..)) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Newcrime2018$Occurred.Time <- factor(Newcrime2018$Occurred.Time, levels = unique(Newcrime2018$Occurred.Time))
# Create a heatmap with 'Neighborhood' on the x-axis, 'Occurred.Time' on the y-axis, and color representing the count of incidents
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(count))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Newcrime2018$Occurred.Time <- factor(Newcrime2018$Occurred.Time, levels = unique(Newcrime2018$Occurred.Time))
# Create a heatmap with 'Neighborhood' on the x-axis, 'Occurred.Time' on the y-axis, and color representing the count of incidents
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(count))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(count))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
on the y-axis, and color representing the count of incidents
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = stat(count))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
lifecycle::last_lifecycle_warnings()
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time)) +
geom_tile(stat = "count") +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = stat(count))) +
geom_tile(stat = "count") +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, stat = "count")) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, stat = "count")) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = 'count')) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = count)) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "white", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "yellow", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(x))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(x))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(x))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 0.5,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = Occurred.Time, fill = after_stat(x))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
View(Newcrime2018)
Newcrime2018$TimePeriod <- cut(as.numeric(Newcrime2018$Occurred.Time), breaks = seq(0, 2400, by = 100), include.lowest = TRUE)
# Create a heatmap with 'Neighborhood' on the x-axis, 'Occurred.Time' on the y-axis, and color representing the count of incidents
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(x))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
View(Newcrime2018)
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, stat = 'count' )) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_scale(x) )) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = stat(count) )) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = TimePeriod, y = Neighborhood, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Occurred Time",
y = "Neighborhood") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
scale_y_continuous(labels = scales::number_format())
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
scale_y_continuous(labels = scales::number_format()) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
scale_y_discrete(labels = scales::number_format()) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
str(Newcrime2018$TimePeriod)
Newcrime2018$TimePeriod <- as.numeric(as.character(Newcrime2018$TimePeriod))
Newcrime2018$TimePeriod <- as.numeric(as.character(Newcrime2018$TimePeriod), na.rm = TRUE)
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
scale_y_discrete(labels = scales::number_format()) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
View(Newcrime2018)
Newcrime2018$TimePeriod <- cut(as.numeric(Newcrime2018$Occurred.Time), breaks = seq(0, 2400, by = 200), include.lowest = TRUE)
Newcrime2018$TimePeriod <- as.numeric(as.character(Newcrime2018$TimePeriod), na.rm = TRUE)
View(Newcrime2018)
Newcrime2018$TimePeriod <- cut(as.numeric(Newcrime2018$Occurred.Time), breaks = seq(0, 2400, by = 200), include.lowest = TRUE)
View(Newcrime2018)
write.csv(Newcrime2018,'test.csv', row.names = FALSE)
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
scale_y_discrete(labels = scales::number_format()) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
scale_y_discrete(labels = scales::number_format(y)) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
View(Newcrime2018)
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
scale_y_discrete(labels = scales::number_format()) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
##  scale_y_discrete(labels = scales::number_format()) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(x))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
##  scale_y_discrete(labels = scales::number_format()) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(x,y))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
##  scale_y_discrete(labels = scales::number_format()) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
ggplot(Newcrime2018, aes(x = Neighborhood, y = TimePeriod, fill = after_stat(x))) +
geom_tile() +
scale_fill_gradient(name = "Incident Count", trans = "log", low = "green", high = "red") +
labs(title = "Heatmap of Incidents by Occurred Time and Neighborhood",
x = "Neighborhood",
y = "Occurred Time") +
##  scale_y_discrete(labels = scales::number_format()) +
#  theme_minimal() +
theme(axis.text.x = element_text(angle = 50, hjust = 1,size = 5, vjust = 1))
##View(Newcrime2018)
